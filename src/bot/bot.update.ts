import { Injectable } from '@nestjs/common';
import { Command, Ctx, Help, InjectBot, Message, On, Start, Update, } from 'nestjs-telegraf';
import { Context, Telegraf } from 'telegraf';

@Update()
@Injectable()
export class BotUpdate {
  constructor(
    @InjectBot()
    private readonly bot: Telegraf<Context>,
  ) {}

  @Start()
  async startCommand(@Ctx() ctx: Context) {
    await ctx.reply('–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –Ω–∞ dd.news! –ß–µ—Ä–µ–∑ –º–µ–Ω—è –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–ª–∏ –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',{
      reply_markup: {
        inline_keyboard: [
          [{
            text: '–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
            web_app: { url: 'https://mini-app-dd-news.vercel.app/' }
          }]
        ]
      }
    });
  }

  @Help()
  async onHelp(@Ctx() ctx: Context) {
    await ctx.reply('–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n/help - –ü–æ–º–æ—â—å\n/site - –Ω–∞—à —Å–∞–π—Ç\n/open_app - –ø—Ä–∏–ª–æ–∂–µ–Ω–µ\n\nEmail: test@mail.ru');
  }

  @Command("site")
  async siteCommand(@Ctx() ctx: Context) {
    await ctx.reply('–ß–∏—Ç–∞–π—Ç–µ –Ω–æ–≤–æ—Å—Ç–∏ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ: https://dd.news/');
  }

  @Command("open_app")
  async openAppCommand(@Ctx() ctx: Context) {
    await ctx.reply('–í–æ—Ç –∫–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è', {
      reply_markup: {
        inline_keyboard: [
          [{
            text: '–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
            web_app: { url: 'https://mini-app-dd-news.vercel.app/' }
          }]
        ]
      }
    });
  }

  @On('sticker')
  async onSticker(@Ctx() ctx: Context) {
    await ctx.reply('–ö–ª–∞—Å—Å–Ω—ã–π —Å—Ç–∏–∫–µ—Ä! üòä');
  }

  @On('text')
  async onMessage(@Message('text') text: string, @Ctx() ctx: Context) {
    await ctx.reply(`–í—ã —Å–∫–∞–∑–∞–ª–∏: "${text}"`);
  }

}